plugins {
    id "application"
    id "osgi"
    id "org.jetbrains.kotlin.jvm" version "1.3.30"
}

application {
    mainClassName = 'me.khol.ambilight.Main'
}

test {
    useJUnitPlatform()
}

dependencies {
    implementation project(":core")
    implementation project(":connection")
    implementation project(":gui")

    implementation "org.jetbrains.kotlin:kotlin-stdlib"

    testImplementation 'io.mockk:mockk:1.9.3'
    testImplementation 'org.assertj:assertj-core:3.11.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.4.2'
}

jar {
    archiveFileName = "Ambilight.jar"
    manifest {
        instruction 'Bundle-NativeCode', 'lib/x64/helloworld.dll; osname=win32; processor=x86_64'
        attributes 'Main-Class': 'ambilight.Main'
    }
    from {
        (configurations.runtimeClasspath).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}
project(':native').afterEvaluate {
    Task copyLibraryTask = project(':native').copyLib(projectDir)
    run.dependsOn copyLibraryTask
    assemble.dependsOn copyLibraryTask
}