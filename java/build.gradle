import org.gradle.internal.jvm.Jvm

plugins {
    id "java"
    id "org.jetbrains.kotlin.jvm" version "1.3.30"
    id "cpp"
}

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'com.github.kurbatov:firmata4j:2.3.2'
    implementation 'org.scream3r:jssc:2.8.0'
    implementation 'org.slf4j:slf4j-api:1.7.7'
}

model {
    platforms {
        x64 {
            architecture "x64"
        }
    }

    repositories {
        libs(PrebuiltLibraries) {
            jdk {
                File javaHome = Jvm.current().javaHome
                headers.srcDirs "$javaHome/include",
                        "$javaHome/include/win32",
                        "$javaHome/include/darwin",
                        "$javaHome/include/linux",
                        "$javaHome/include/freebsd"
            }
        }
    }

    //noinspection GroovyAssignabilityCheck
    components {
        nativeGdi(NativeLibrarySpec) {
            targetPlatform "x64"
            sources {
                cpp {
                    source {
                        lib library: 'jdk', linkage: 'api'
                    }
                }
            }
            binaries.all {
                cppCompiler.args '-lgdi32'
                cppCompiler.args '-lgdi32asd'
            }
        }
    }

    toolChains {
//        gcc(Gcc) {
//            eachPlatform {
////                cppCompiler.executable = "g++"
////                path "/opt/rh/devtoolset-2/root/usr/bin/gcc"
//                cppCompiler.withArguments { args ->
//                    args << "-O2"
////                    args << "-I" + SYS_INCLUDE_DIR
////                    args << "-I" + SYS_LOCAL_INCLUDE_DIR
//                    args << "-I" + JNI_INCLUDE_DIR
//                    args << "-I" + JNI_INCLUDE_DIR + "/win32"
//                    args << "-std=c++11"
//                }
//                linker.withArguments { args ->
//                    args << "-O2"
//                    args << "-lstdc++"
//                }
//            }
//        }

        visualCpp(VisualCpp) {
//            installDir "C:/Program Files (x86)/Microsoft Visual Studio/2019/Community"
            eachPlatform {
                cppCompiler.withArguments { args ->
//                    args << "-O2"
//                    args << "-shared"
                    args << "-lgdi32"
                    args << "-lgdi3dd2"
                }
                linker.withArguments { args ->
                    args << "-O2"
                    args << "-lstdc++"
                    args << "--lgdi32"
                    args << "--lgdi3dd2"
                }
            }
        }
    }
}